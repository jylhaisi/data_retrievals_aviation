
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Tämä skripti lataa aviation-tietokannasta METAR-havaintoja sekä eri malleille näkyvyysennusteita.
> rm(list=ls())
> 
> # Välttämättömät asema- ja muuttujalistat yms.
> source("load_libraries_tables_and_open_connections.R")
Loading required package: DBI
Loading required package: mgcv
Loading required package: nlme
This is mgcv 1.8-15. For overview type 'help("mgcv-package")'.
Loading required package: rJava
Loading required package: xlsxjars
Loading required package: fields
Loading required package: spam
Loading required package: grid
Spam version 1.4-0 (2016-08-29) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: maps
Loading required package: boot

Attaching package: ‘boot’

The following object is masked from ‘package:car’:

    logit

Loading required package: CircStats
Loading required package: dtw
Loading required package: proxy

Attaching package: ‘proxy’

The following object is masked from ‘package:spam’:

    as.matrix

The following objects are masked from ‘package:stats’:

    as.dist, dist

The following object is masked from ‘package:base’:

    as.matrix

Loaded dtw v1.18-1. See ?dtw for help, citation("dtw") for use in publication.

Loading required package: XML
Loading required package: RCurl
Loading required package: bitops

Attaching package: ‘RCurl’

The following object is masked from ‘package:rJava’:

    clone

> source("hae_aviation_scripts.R")
> 
> previ_ecmos_v_station_id <- asemalista_suomalaiset_lentokentat$wmon
> asemajoukko <- paste("suomalaiset_lentokentat",sep="")
> 
> station_id <- "all"
> # Data is retrieved in one month chunks, as otherwise the extent would be too much
> for (year in 2000:2017) {
+   for (month in 1:12) {
+     if (month<10) {
+       month1 <- paste("0",month,sep="")
+     } else {
+       month1 <- month
+     }
+     year1 <- year
+     if (month==12) {
+       month2 <- "01"
+       year2 <- year1 + 1
+     } else if (month<9) {
+       month2 <- paste("0",(month + 1),sep="")
+       year2 <- year1
+     } else {
+       month2 <- month + 1
+       year2 <- year1
+     }
+     
+     ### MANUAALISEN METAR-DATAN HAKU AVIATION-TIETOKANNASTA ###
+     
+     # Tämän pitäisi olla ihan no-brainer -homma. Manuaalihavainnot on parsittu suoraan METAR:eista ja niitä on v. 2005 lähtien. Tekstimuotoiset METAR:it on haettu samasta taulusta kuin TAF:it
+     Id <- c(1,4,10,20,501,502,513,514,515,516,517,521,522,523) # Id <- 515 # (Aviation visibility M)
+     sel_AQU <- "all"
+     # message_type 1 on manuaalihavainnot, numero 8 autohavainnot, 0 on SPECI-havainnot
+     for (message_type_id in c(0,1,8)) {
+       saved_variable <- paste("havainnot_METAR_",year1,"_",month1,"_",message_type_id,"_allstations",sep="")
+       filename <- paste("/data/statcal/results/R_projects/data_retrievals_aviation/all_METARvars",saved_variable,".RData",sep="")
+       eval(subs(saved_variable <- hae_havainnot_aviation(sel_AQU,station_id,message_type_id,month1,month2,year1,year2)))
+       eval(subs(save(saved_variable,file=filename)))
+       eval(subs(rm(saved_variable)))
+     }
+     rm(message_type_id)
+     rm(sel_AQU)
+     rm(Id)
+     
+     
+     # # Haetaan pelkät tekstimuotoiset METAR:it
+     # saved_variable <- paste("teksti_METAR_",year1,"_",month1,"_allstations",sep="")
+     # filename <- paste("/data/statcal/results/R_projects/data_retrievals_aviation/",saved_variable,".RData",sep="")
+     # eval(subs(saved_variable <- hae_sanomat_aviation(station_id,month1,month2,year1,year2)))
+     # eval(subs(save(saved_variable,file=filename)))
+     # eval(subs(rm(saved_variable)))
+     # rm(month1)
+     # rm(month2)
+     # rm(year1)
+     # rm(year2)
+   }
+   rm(month)
+ }
> rm(year)
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> # ### MALLIENNUSTEIDEN HAKU AVIATION-TIETOKANNASTA ###
> # 
> # for (year in 2016:2017) {
> #   for (month in c(1:12)) {
> #     if (month<10) {
> #       month1 <- paste("0",month,sep="")
> #     } else {
> #       month1 <- month
> #     }
> #     year1 <- year
> #     if (month==12) {
> #       month2 <- "01"
> #       year2 <- year1 + 1
> #     } else if (month<9) {
> #       month2 <- paste("0",(month + 1),sep="")
> #       year2 <- year1
> #     } else {
> #       month2 <- month + 1
> #       year2 <- year1
> #     }
> #     
> #     # Näkyvyys HIMAN + mallin oma kaikki asemat kaikki mallit
> #     saved_variable <- paste("model_VIS_",year1,"_",month1,"_allstations",sep="")
> #     filename <- paste("/data/statcal/results/R_projects/data_retrievals_aviation/",saved_variable,".RData",sep="")
> #     variables <- c(1232,10407,407,515)
> #     models <- c(1,2,3,4,5)
> #     eval(subs(saved_variable <- hae_model_aviation(station_id,variables,models,month1,month2,year1,year2)))
> #     eval(subs(save(saved_variable,file=filename)))
> #     eval(subs(rm(saved_variable)))
> #     
> #     # Lämpötila+dewpoint+tuuli+sade kaikki asemat Harmonie+EC
> #     saved_variable <- paste("model_othervars_",year1,"_",month1,"_allstations",sep="")
> #     filename <- paste("/data/statcal/results/R_projects/data_retrievals_aviation/",saved_variable,".RData",sep="")
> #     variables <- c(4,10,21,50)
> #     models <- c(1,5)
> #     eval(subs(saved_variable <- hae_model_aviation(station_id,variables,models,month1,month2,year1,year2)))
> #     eval(subs(save(saved_variable,file=filename)))
> #     eval(subs(rm(saved_variable)))
> #     
> #     
> #     rm(month1)
> #     rm(month2)
> #     rm(year1)
> #     rm(year2)
> #   }
> #   rm(month)
> # }
> # rm(year)
> 
> 
> 
> rm(station_id)
> rm(con3)
> rm(drv)
> 
> proc.time()
     user    system   elapsed 
10625.917  2632.415 47170.130 
